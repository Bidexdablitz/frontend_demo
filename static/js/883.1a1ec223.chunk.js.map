{"version":3,"file":"static/js/883.1a1ec223.chunk.js","mappings":"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","sources":["pages/roommate_onboarding/components/page_one/PageOne.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { routes } from \"router\";\r\nimport {\r\n    validateDate,\r\n    validateEmail,\r\n    validateFullName,\r\n    validateInput,\r\n    validateTel,\r\n} from \"utilities/handleFormSubmit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAnimateIn, useRoommateSelect } from \"utilities/customHooks\";\r\nimport { roommateDetailsContext, roommateErrorDetailsContext } from \"utilities/contextDefinitions\";\r\nimport { maxDate, minDate, options } from \"utilities/globalVariables\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./page-one.scss\";\r\n\r\nfunction PageOne() {\r\n    useAnimateIn(\".slide-in-rest\", { threshold: 0.7 });\r\n    const { details, setDetails } = React.useContext(roommateDetailsContext);\r\n    const { errors, setErrors } = React.useContext(roommateErrorDetailsContext);\r\n    const dateRef = React.useRef(null);\r\n    const genderSelect = useRoommateSelect(\"gender\", options.gender);\r\n\r\n    return (\r\n        <div className=\"page-one\">\r\n            <div\r\n                className=\"input-wrapper name slide-in-rest\"\r\n                {...(errors.name.error ? { \"data-error-message\": `${errors.name.message}` } : null)}\r\n            >\r\n                <label htmlFor=\"name\">full name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Your full name\"\r\n                    onKeyUp={(e) => validateFullName(e, setErrors)}\r\n                    onChange={(e) => {\r\n                        setDetails((p) => {\r\n                            return { ...p, [e.target.name]: e.target.value };\r\n                        });\r\n                    }}\r\n                    value={details.name}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"input-wrapper email slide-in-rest\"\r\n                {...(errors.email.error ? { \"data-error-message\": `${errors.email.message}` } : null)}\r\n            >\r\n                <label htmlFor=\"email\">email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Your full email\"\r\n                    onKeyUp={(e) => validateInput(e, setErrors)}\r\n                    onBlur={(e) => validateEmail(e, setErrors)}\r\n                    onChange={(e) => {\r\n                        setDetails((p) => {\r\n                            return { ...p, [e.target.name]: e.target.value };\r\n                        });\r\n                    }}\r\n                    value={details.email}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"input-wrapper phone slide-in-rest\"\r\n                {...(errors.phone.error ? { \"data-error-message\": `${errors.phone.message}` } : null)}\r\n            >\r\n                <label htmlFor=\"phone\">Phone number</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    className=\"phone\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Your phone number\"\r\n                    onKeyUp={(e) => validateInput(e, setErrors)}\r\n                    onBlur={(e) => validateTel(e, setErrors)}\r\n                    onChange={(e) => {\r\n                        setDetails((p) => {\r\n                            const el = e.target as HTMLInputElement;\r\n                            return { ...p, [el.name]: el.value };\r\n                        });\r\n                    }}\r\n                    value={details.phone}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"input-wrapper dob slide-in-rest\"\r\n                {...(errors.date_of_birth.error\r\n                    ? { \"data-error-message\": `${errors.date_of_birth.message}` }\r\n                    : null)}\r\n            >\r\n                <label htmlFor=\"date_of_birth\">Date of birth</label>\r\n                <DatePicker\r\n                    ref={dateRef}\r\n                    placeholderText=\"Your date of birth\"\r\n                    className=\"date_of_birth\"\r\n                    name=\"date_of_birth\"\r\n                    id=\"date_of_birth\"\r\n                    maxDate={maxDate}\r\n                    minDate={minDate}\r\n                    onChange={(date) => {\r\n                        validateDate(dateRef, date, setErrors);\r\n                        setDetails((prev) => {\r\n                            return { ...prev, date_of_birth: date };\r\n                        });\r\n                    }}\r\n                    selected={details.date_of_birth}\r\n                    dateFormat=\"d MMMM, yyyy\"\r\n                />\r\n            </div>\r\n            {genderSelect}\r\n\r\n            <div className=\"navigation-buttons slide-in-rest\">\r\n                <Link to={routes.roommateOnboarding.pageTwo} replace={true} className=\"next\">\r\n                    next\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageOne;\r\n"],"names":["useAnimateIn","threshold","React","roommateDetailsContext","details","setDetails","roommateErrorDetailsContext","errors","setErrors","dateRef","genderSelect","useRoommateSelect","options","className","name","error","message","htmlFor","type","id","placeholder","onKeyUp","e","validateFullName","onChange","p","target","value","email","validateInput","onBlur","validateEmail","phone","validateTel","el","date_of_birth","ref","placeholderText","maxDate","minDate","date","validateDate","prev","selected","dateFormat","to","routes","replace"],"sourceRoot":""}
{"version":3,"file":"static/js/67.74a09636.chunk.js","mappings":"uIA0BA,IAAe,IAA0B,wE,qJCmEzC,MArFA,WACoBA,EAAAA,OAAa,MAA7B,IACA,EAA8BA,EAAAA,UAAe,GAAM,eAA5CC,EAAO,KAAEC,EAAU,KACpBC,GAAc,IAAIC,MAAOC,cAE/B,OACI,qBAASC,UAAU,qBAAoB,WACnC,kBAAMC,aAAa,QAAQD,UAAWL,EAAU,UAAY,GAAG,WAC3D,mBACIO,QAAQ,gBACRC,QAAS,SAACC,GACFT,GACJS,EAAEC,gBACN,EAAE,WAEF,gBAAKC,IAAKC,EAAAA,EAAYC,IAAI,MAC1B,kBAAOC,KAAK,OAAOC,KAAK,gBAAgBC,GAAG,sBAG/C,iBAAKX,UAAU,qBAAoB,WAC/B,kBAAOE,QAAQ,YAAW,SAAC,iBAC3B,kBAAOO,KAAK,OAAOE,GAAG,YAAYC,YAAY,mBAElD,iBAAKZ,UAAU,qBAAoB,WAC/B,kBAAOE,QAAQ,WAAU,SAAC,gBAC1B,kBAAOO,KAAK,OAAOE,GAAG,WAAWC,YAAY,kBAEjD,iBAAKZ,UAAU,qBAAoB,WAC/B,kBAAOE,QAAQ,WAAU,SAAC,eAC1B,kBAAOO,KAAK,OAAOE,GAAG,WAAWC,YAAY,2BAEjD,iBAAKZ,UAAU,sBAAqB,WAChC,kBAAOE,QAAQ,QAAO,SAAC,mBACvB,kBAAOO,KAAK,QAAQE,GAAG,QAAQC,YAAY,2BAG/C,iBAAKZ,UAAU,uBAAsB,WACjC,kBAAOE,QAAQ,QAAO,SAAC,WACvB,mBAAQQ,KAAK,QAAQC,GAAG,cAE5B,iBAAKX,UAAU,uBAAsB,WACjC,kBAAOE,QAAQ,SAAQ,SAAC,YACxB,mBAAQQ,KAAK,SAASC,GAAG,eAE7B,iBAAKX,UAAU,sBAAqB,WAChC,kBAAOE,QAAQ,QAAO,SAAC,kBACvB,kBAAOO,KAAK,MAAME,GAAG,MAAMC,YAAY,0BAE3C,iBAAKZ,UAAU,gBAAe,WAC1B,kBAAOE,QAAQ,gBAAe,SAAC,mBAC/B,SAAC,IAAU,CACPW,gBAAgB,qBAChBb,UAAU,gBACVU,KAAK,gBACLC,GAAG,gBACHG,QAASA,EAAAA,GACTC,QAASA,EAAAA,GACTC,SAAU,SAACC,GAAI,OAAK,IAAI,EACxBC,SAAU,KACVC,WAAW,qBAInB,iBAAKnB,UAAU,UAAS,WACpB,mBACIS,KAAK,SACLT,UAAU,OACVG,QAAS,WACLP,GAAW,SAACwB,GAAC,OAAMA,CAAC,GACxB,EAAE,SACL,iBAGAzB,IACG,mBAAQc,KAAK,SAAST,UAAU,OAAM,SAAC,wBAMnD,eAAGA,UAAU,0BAAyB,UAAC,QAAQH,EAAY,iCAGvE,C","sources":["assets/images/icons/blue-add-person-icon.svg","pages/dashboard/components/profile/Profile.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBlueAddPersonIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 22,\n    viewBox: \"0 0 30 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.0026 11C21.9493 11 24.3359 8.61337 24.3359 5.66671C24.3359 2.72004 21.9493 0.333374 19.0026 0.333374C16.0559 0.333374 13.6693 2.72004 13.6693 5.66671C13.6693 8.61337 16.0559 11 19.0026 11ZM7.0026 8.33337V5.66671C7.0026 4.93337 6.4026 4.33337 5.66927 4.33337C4.93594 4.33337 4.33594 4.93337 4.33594 5.66671V8.33337H1.66927C0.935938 8.33337 0.335938 8.93337 0.335938 9.66671C0.335938 10.4 0.935938 11 1.66927 11H4.33594V13.6667C4.33594 14.4 4.93594 15 5.66927 15C6.4026 15 7.0026 14.4 7.0026 13.6667V11H9.66927C10.4026 11 11.0026 10.4 11.0026 9.66671C11.0026 8.93337 10.4026 8.33337 9.66927 8.33337H7.0026ZM19.0026 13.6667C15.4426 13.6667 8.33594 15.4534 8.33594 19V20.3334C8.33594 21.0667 8.93594 21.6667 9.66927 21.6667H28.3359C29.0693 21.6667 29.6693 21.0667 29.6693 20.3334V19C29.6693 15.4534 22.5626 13.6667 19.0026 13.6667Z\",\n    fill: \"#00A0E3\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueAddPersonIcon);\nexport default __webpack_public_path__ + \"static/media/blue-add-person-icon.05e6a5265cb0fd0f2863c6c7096d5053.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\r\nimport { maxDate, minDate } from \"utilities/globalVariables\";\r\nimport bluePerson from \"assets/images/icons/blue-add-person-icon.svg\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./profile.scss\";\r\n\r\nfunction Profile() {\r\n    const dateRef = React.useRef(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const currentDate = new Date().getFullYear();\r\n\r\n    return (\r\n        <section className=\"dashboard-profile \">\r\n            <form autoComplete=\"false\" className={editing ? \"editing\" : \"\"}>\r\n                <label\r\n                    htmlFor=\"profile-image\"\r\n                    onClick={(e) => {\r\n                        if (editing) return;\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <img src={bluePerson} alt=\"\" />\r\n                    <input type=\"file\" name=\"profile_image\" id=\"profile-image\" />\r\n                </label>\r\n\r\n                <div className=\"input-wrapper name\">\r\n                    <label htmlFor=\"firstname\"> first name</label>\r\n                    <input type=\"text\" id=\"firstname\" placeholder=\"first name\" />\r\n                </div>\r\n                <div className=\"input-wrapper name\">\r\n                    <label htmlFor=\"lastname\"> last name</label>\r\n                    <input type=\"text\" id=\"lastname\" placeholder=\"last name\" />\r\n                </div>\r\n                <div className=\"input-wrapper name\">\r\n                    <label htmlFor=\"username\">username </label>\r\n                    <input type=\"text\" id=\"username\" placeholder=\"your username name\" />\r\n                </div>\r\n                <div className=\"input-wrapper email\">\r\n                    <label htmlFor=\"email\">email address</label>\r\n                    <input type=\"email\" id=\"email\" placeholder=\"your email address\" />\r\n                </div>\r\n\r\n                <div className=\"input-wrapper select\">\r\n                    <label htmlFor=\"state\">state</label>\r\n                    <select name=\"state\" id=\"state\"></select>\r\n                </div>\r\n                <div className=\"input-wrapper select\">\r\n                    <label htmlFor=\"school\">school</label>\r\n                    <select name=\"school\" id=\"school\"></select>\r\n                </div>\r\n                <div className=\"input-wrapper phone\">\r\n                    <label htmlFor=\"phone\">phone number</label>\r\n                    <input type=\"tel\" id=\"tel\" placeholder=\"your phone number\" />\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <label htmlFor=\"date_of_birth\">date of birth</label>\r\n                    <DatePicker\r\n                        placeholderText=\"Your date of birth\"\r\n                        className=\"date_of_birth\"\r\n                        name=\"date_of_birth\"\r\n                        id=\"date_of_birth\"\r\n                        maxDate={maxDate}\r\n                        minDate={minDate}\r\n                        onChange={(date) => null}\r\n                        selected={null}\r\n                        dateFormat=\"d MMMM, yyyy\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                            setEditing((p) => !p);\r\n                        }}\r\n                    >\r\n                        edit profile\r\n                    </button>\r\n                    {editing && (\r\n                        <button type=\"submit\" className=\"save\">\r\n                            save profile\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n            <p className=\"copyright slide-in-rest\">&#169; {currentDate} Studentrealestates inc. </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n"],"names":["React","editing","setEditing","currentDate","Date","getFullYear","className","autoComplete","htmlFor","onClick","e","preventDefault","src","bluePerson","alt","type","name","id","placeholder","placeholderText","maxDate","minDate","onChange","date","selected","dateFormat","p"],"sourceRoot":""}
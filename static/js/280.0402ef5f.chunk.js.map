{"version":3,"file":"static/js/280.0402ef5f.chunk.js","mappings":"8OAwFA,UAhFA,YACIA,EAAAA,EAAAA,IAAa,iBAAkB,CAAEC,UAAW,KAC5C,MAAgCC,EAAAA,WAAiBC,EAAAA,IAAzCC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WACjB,EAA8BH,EAAAA,WAAiBI,EAAAA,IAAvCC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAChB,GAA4BC,EAAAA,EAAAA,MAApBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACVC,GAAcC,EAAAA,EAAAA,IAChB,QACAH,EAAOI,KAAI,SAACC,GACR,MAAO,CAAEC,MAAOD,EAAOE,WAAYF,EACvC,KAEEG,GAAmBL,EAAAA,EAAAA,IACrB,aACAF,EACKQ,QAAO,SAACC,GAAM,OAAKA,EAAOL,QAAUX,EAAQW,KAAK,IACjDD,KAAI,SAACM,GACF,MAAO,CAAEJ,MAAOI,EAAOC,GAAIJ,WAAW,GAAD,OAAKG,EAAOE,KAAI,aAAKF,EAAOG,aAAY,KACjF,KAEFC,GAAcX,EAAAA,EAAAA,IAAkB,QAASY,EAAAA,GAAAA,OAC/C,OACI,iBAAKC,UAAU,WAAU,UACpBd,EACAM,EACAM,GACD,iCACIE,UAAU,+BACLnB,EAAOoB,WAAWC,MACjB,CAAE,qBAAqB,GAAD,OAAKrB,EAAOoB,WAAWE,UAC7C,MAAI,eAEV,kBAAOC,QAAQ,aAAY,SAAC,gBAC5B,kBACIC,KAAK,MACLL,UAAU,aACVL,GAAG,aACHC,KAAK,aACLU,YAAY,kBACZC,QAAS,SAACC,GAAC,OAAKC,EAAAA,EAAAA,IAAcD,EAAG1B,EAAU,EAC3C4B,SAAU,SAACF,GACP7B,GAAW,SAACgC,GACR,IAAMC,EAAKJ,EAAEK,OACb,OAAO,kBAAKF,GAAC,cAAGC,EAAGhB,KAAOgB,EAAGtB,OACjC,GACJ,EACAA,MAAOZ,EAAQuB,kBAGvB,iCACID,UAAU,+BACLnB,EAAOiC,KAAKZ,MAAQ,CAAE,qBAAqB,GAAD,OAAKrB,EAAOiC,KAAKX,UAAc,MAAI,eAElF,kBAAOC,QAAQ,OAAM,SAAC,0BACtB,kBACIC,KAAK,MACLL,UAAU,OACVL,GAAG,OACHC,KAAK,OACLU,YAAY,uCACZI,SAAU,SAACF,GACP7B,GAAW,SAACgC,GACR,IAAMC,EAAKJ,EAAEK,OACb,OAAO,kBAAKF,GAAC,cAAGC,EAAGhB,KAAOgB,EAAGtB,OACjC,GACJ,EACAA,MAAOZ,EAAQoC,YAGvB,iBAAKd,UAAU,mCAAkC,WAC7C,SAAC,KAAI,CAACe,GAAIC,EAAAA,EAAAA,mBAAAA,MAAiCC,SAAS,EAAMjB,UAAU,OAAM,SAAC,UAG3E,SAAC,KAAI,CAACe,GAAIC,EAAAA,EAAAA,mBAAAA,UAAqCC,SAAS,EAAMjB,UAAU,OAAM,SAAC,cAM/F,C","sources":["pages/roommate_onboarding/components/page_two/PageTwo.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { validateInput } from \"utilities/handleFormSubmit\";\r\nimport { useAnimateIn, useRoommateSelect, useStateSchools } from \"utilities/customHooks\";\r\nimport { routes } from \"router\";\r\nimport { roommateDetailsContext, roommateErrorDetailsContext } from \"utilities/contextDefinitions\";\r\nimport { options } from \"utilities/globalVariables\";\r\n\r\nfunction PageTwo() {\r\n    useAnimateIn(\".slide-in-rest\", { threshold: 0.7 });\r\n    const { details, setDetails } = React.useContext(roommateDetailsContext);\r\n    const { errors, setErrors } = React.useContext(roommateErrorDetailsContext);\r\n    const { states, schools } = useStateSchools();\r\n    const stateSelect = useRoommateSelect(\r\n        \"state\",\r\n        states.map((state) => {\r\n            return { value: state, userString: state };\r\n        })\r\n    );\r\n    const universitySelect = useRoommateSelect(\r\n        \"university\",\r\n        schools\r\n            .filter((school) => school.state === details.state)\r\n            .map((school) => {\r\n                return { value: school.id, userString: `${school.name} (${school.abbreviation})` };\r\n            })\r\n    );\r\n    const levelSelect = useRoommateSelect(\"level\", options.level);\r\n    return (\r\n        <div className=\"page-two\">\r\n            {stateSelect}\r\n            {universitySelect}\r\n            {levelSelect}\r\n            <div\r\n                className=\"input-wrapper slide-in-rest\"\r\n                {...(errors.department.error\r\n                    ? { \"data-error-message\": `${errors.department.message}` }\r\n                    : null)}\r\n            >\r\n                <label htmlFor=\"department\">department</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    className=\"department\"\r\n                    id=\"department\"\r\n                    name=\"department\"\r\n                    placeholder=\"Your department\"\r\n                    onKeyUp={(e) => validateInput(e, setErrors)}\r\n                    onChange={(e) => {\r\n                        setDetails((p) => {\r\n                            const el = e.target as HTMLInputElement;\r\n                            return { ...p, [el.name]: el.value };\r\n                        });\r\n                    }}\r\n                    value={details.department}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"input-wrapper slide-in-rest\"\r\n                {...(errors.pets.error ? { \"data-error-message\": `${errors.pets.message}` } : null)}\r\n            >\r\n                <label htmlFor=\"pets\">Your pets (Optional)</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    className=\"pets\"\r\n                    id=\"pets\"\r\n                    name=\"pets\"\r\n                    placeholder=\"Seperate each pet with a comma ( , )\"\r\n                    onChange={(e) => {\r\n                        setDetails((p) => {\r\n                            const el = e.target as HTMLInputElement;\r\n                            return { ...p, [el.name]: el.value };\r\n                        });\r\n                    }}\r\n                    value={details.pets}\r\n                />\r\n            </div>\r\n            <div className=\"navigation-buttons slide-in-rest\">\r\n                <Link to={routes.roommateOnboarding.index} replace={true} className=\"back\">\r\n                    back\r\n                </Link>\r\n                <Link to={routes.roommateOnboarding.pageThree} replace={true} className=\"next\">\r\n                    next\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageTwo;\r\n"],"names":["useAnimateIn","threshold","React","roommateDetailsContext","details","setDetails","roommateErrorDetailsContext","errors","setErrors","useStateSchools","states","schools","stateSelect","useRoommateSelect","map","state","value","userString","universitySelect","filter","school","id","name","abbreviation","levelSelect","options","className","department","error","message","htmlFor","type","placeholder","onKeyUp","e","validateInput","onChange","p","el","target","pets","to","routes","replace"],"sourceRoot":""}